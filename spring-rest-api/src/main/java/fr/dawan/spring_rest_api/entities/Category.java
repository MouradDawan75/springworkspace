package fr.dawan.spring_rest_api.entities;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.util.HashSet;
import java.util.Set;

@Getter
@Setter
@Entity
public class Category extends BaseEntity{

    /*
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Version
    private int version;

     */

    @Column(unique = true, nullable = false)
    private String name;

    /*
    Mode de chargement des relations:
    Lazy: mode tardif - chargement à la demande (appeler le getter) -> mode par défaut
    Eager: immédiat -> en récuperant les catogery -> on récupère les products associés

    les modes par défaut
    Many: mode Lazy
    One: mode Eager

    @ManyToOne(optional = true, fetch = FetchType.LAZY, cascade = CascadeType.MERGE)

        And this is the the annotation generated by Bonita if you have an eager with composition:

    @OneToMany(orphanRemoval = true, fetch = FetchType.EAGER, cascade = CascadeType.ALL)

    category_id est une clé de jointure: gérer la suppression en cascade
     */
    //@OneToMany(mappedBy = "category", cascade = CascadeType.REMOVE, fetch = FetchType.EAGER) activation du mode immédiat en cas de besoin
    @OneToMany(mappedBy = "category",cascade = CascadeType.REMOVE)
    private Set<Product> products = new HashSet<>();
}
